This were my steps:
1. Change from AccountDAO interface to AccountDAOFactory with same content.
   I totally can keep the AccountDAO, but I want to change to a new name with Factory behind the word AccountDAO
   for easier to understand.
2. Create AccountDAOImplement and MockAccountDAOImplement to implements the AccountDAOFactory.
   This is the most important step because after this step, the AccountDAOFactory could be flexible changed between
   AccountDAOImplement and MockAccountDAOImplement.
  + AccountDAOImplement will be used for PROD
  + MockAccountDAOImplement will be used for TEST
3. Then in AccountServiceImpl class, I only make a composition to AccountDAOFactory.
4. In the Client Application class. I can flexibility use AccountDAOFactory by AccountDAOImpl or MockAccountDAOImplement
   base on the Client's need.

One thing made me confuse was it's very like as Strategy Pattern.